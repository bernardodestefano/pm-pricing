{"version":3,"file":"static/webpack/static/development/pages/index.js.a1e44ec44730afb59c0f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Plan from \"../components/Plan\";\n\nconst HomePage = ({ plans }) => {\n  return (\n    <>\n      <h2>Plans & prices</h2>\n      <ul className=\"plans\">\n        {plans.map(plan => (\n          <li className=\"plan\">\n            <Plan {...plan} key={plan.ID} />\n          </li>\n        ))}\n      </ul>\n      <style jsx>{`\n        .plans {\n          list-style: none;\n          margin: 2em;\n          padding: 0;\n          display: grid;\n          grid-gap: 20px;\n          grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n        }\n        .plan {\n          display: flex;\n          height: 100%;\n          flex-direction: column;\n          border-radius: 5px;\n          border: 1px solid rgb(220, 220, 220);\n          margin-bottom: 10px;\n          padding-bottom: 10px;\n        }\n      `}</style>\n    </>\n  );\n};\n\n// Called at build time and renders the page to static HTML.\nexport async function unstable_getStaticProps() {\n  try {\n    const response = await fetch(\"https://api.protonmail.ch/payments/plans\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        \"x-pm-appversion\": \"Other\",\n        \"x-pm-apiversion\": \"3\",\n        Accept: \"application/vnd.protonmail.v1+json\"\n      }\n    });\n\n    if (response.status >= 300) {\n      throw new Error(\n        `Cannot fetch plans data, status code: ${response.status}`\n      );\n    }\n\n    const json = await response.json();\n\n    // As per agreement, i'm fetching the API and filter down only the plans i'm interested in\n    const plans = json.Plans.reduce((acc, curr) => {\n      if (\n        curr.Name === \"plus\" ||\n        curr.Name === \"professional\" ||\n        curr.Name === \"visionary\"\n      ) {\n        acc.push(curr);\n      }\n      return acc;\n    }, []);\n\n    // i'm adding the missing Free plan\n    plans.unshift({\n      ID:\n        \"Fr3E-BaaaaaaaaaaaaapqQbd1FITVWYfTfKYUmV_wKKR3GsveN4HZCh9er5dhelYylEp-fhjBbUPDMHGU699fw==\",\n      Type: 1,\n      Name: \"free\",\n      Title: \"The basic for private and secure communication\",\n      MaxDomains: 0,\n      MaxAddresses: 1,\n      MaxSpace: 536870912,\n      MaxMembers: 1,\n      MaxVPN: 0,\n      Services: 1,\n      Features: 0,\n      Pricing: {\n        \"1\": 0,\n        \"12\": 0,\n        \"24\": 0\n      },\n      Currency: \"CHF\",\n      Quantity: 1,\n      Cycle: 1,\n      Amount: 500\n    });\n\n    return {\n      props: {\n        plans\n      }\n    };\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default HomePage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAHA;AAAA;AAAA;AA8BA;AACA;AACA;AAoEA;;;;;;A","sourceRoot":""}